# -**- mode: org; coding: utf-8 -**-
#+TITLE: HAP - General LOG Book Skeleton
#+SUBTITLE: A GP Log Book with Time Tracking and Reporting
#+EXPORT_FILE_NAME: HAP_General-Log-Book-Skeleton.pdf
#+TEXT: Copyright © 2022 Harmonic Alchemy Productions & Others
#+AUTHOR: Alisha Awen - Harmonic Alchemy Productions
#+EMAIL: Siren1@disroot.org
#+DATE: {{{time(%A %Y-%b-%d)}}}
#+TEXT: Created: <2021-02-11 Thu>
#+TEXT: Last Published: <Not Published>
#+FILETAGS: templates logs unpublished

#+DESCRIPTION: HAP - Modular Emacs Org Mode General Log Notebook Template.  This is the replacement for the Markdown Mode templates I was using previously, which were in turn replacements for even older templates I made originally for Evernote/Trello/Scrivener...

#+BEGIN_COMMENT

=Setup Files:=

   For Cloned Versions of this template, the file/paths below will be relative
   to your parent project directory and as such, should be all set to your new:
   ~.../your-Log-Book-Project/org-templates/~ directory...

=NOTE:= 

   *SETUPFILE:* ~default-tags.org~ is where tags are set for this project...

              If you need to change the category, do it in your cloned version
              of default-tags.org...  If you rename default-tags.org file from
              "default" to something more specific, you will need to change the
              ~#+SETUPFILE: ./org-templates/default-tags.org~ line below to reflect
              your new file name as well...  You may change any of the tags except
              important ones to what ever you wish... Read the *:README:* drawer
              within the file for more information...

              The Existing Tags are useful for most situations within
              this context, and some of the tags MUST ALWAYS be defined
              for this LaTeX publishing system to work correctly...

              This file may be used by other ~.org~ files within this
              Master Folder... If you need to customize them specifically
              for this ~.org~ file alone, you should copy and rename:
              ~default-tags.org~ and modify your renamed copy instead...
              
              If you do this, you will ALSO need to change the
              ~#+SETUPFILE: ./org-templates/default-tags.org~
              directive below to reflect your changed file name...

              /(change the name from/ ~default-tags.org~ /to another name/
              /and-or replace some (but NOT ALL) of the tags within/
              /to your own tags... see instructions inside the file)/

#+END_COMMENT

#+SETUPFILE: ./org-templates/log-book-setup.org
#+SETUPFILE: ./org-templates/default-tags.org

:LATEST_UPDATE:
  <2023-02-15 Wed>

  =YOU MAY REMOVE This Drawer= from your own clones of this template if
  it is bothering you... This drawer is used for HAP Modular Emacs
  DOC TEMPLATES housekeeping...

  =HOWEVER= you may also use it for the same purpose to keep your existing
  Modular Emacs based org documents in sync with the latest updates of the
  template they were created from...
  
  =If you do wish to do the same... Read On Below...=
  
  - =INTERNAL USE Instructions:= /(END USERS SKIP THIS BULLET)/

    This bullet is not for end users... This is /"Note to Self"/ stuff...

    + [ ] =MASTER TEMPLATE ONLY= *Keep The Above Timestamp Up To Date:*

        DO THIS ALWAYS, JUST AFTER YOU UPDATE THIS TEMPLATE... DON'T FORGET!
        /(i.e., BOILERPLATE content and :README: meta data)/
  
  - =PUBLIC USE Instructions:= /(FOR CLONES OF THIS TEMPLATE)/

    + [ ] =Change this= *:LATEST_UPDATE:* =drawer title:= /(within clones only)/

        Change it to: *:LATEST_TEMPLATE_UPDATE:* within NEWLY CREATED CLONES...

    + [ ] *COMPARE the TIMESTAMPS between THIS TEMPLATE and CLONES:*

        The BOILERPLATE content and meta data within CLONES of this
        TEMPLATE will get out of sync after a while due to Harmonic
        Alchemy Modular Emacs version updates etc...
        
        Use the ABOVE timestamp /(within the TEMPLATE and your CLONE)/
        to see if the clone's BOILERPLATE content needs to be updated
        /(brought into sync with its template - MERGE)/ and then perform
        any needed merging/replacing of BOILERPLATE and/or meta data.
        /(e.g, *:README:* drawers, etc.)/

    + [ ] *Keep ABOVE timestamp within CLONES of this template UP TO DATE:*

        =AFTER Completing Above MERGE Step= and your clone's BOILERPLATE
        content has been brought up to date /(i.e. in sync)/ with
        its TEMPLATE... Then update the timestamp ABOVE...
        /(WITHIN YOUR CLONE)/ to record the date of its last sync status...
:END:
:READ_ME_FIRST:
=Instructions:= /(How to Install & Use This Template)/

To use *HAP_General-Log-Book-Project-Skeleton.org* /(Org-Mode Log Notebook Project /Template)/ for your own projects, =Perform The Following Steps:=

/Use the org-mode Checkboxes to Help You Keep Track of Progress/

1) [ ] *Clone a Copy of This File:*

      Put your clone where you normally organize your Logs or 
      projects that need logs.

      *Place it within its own MASTER* *FOLDER* /(or within an existing project
      MASTER FOLDER that needs a LOG...)/

      If this is a NEW MASTER FOLDER, name it to reflect your New
      Log Book's title... /(what you renamed this .org file to)/...

      =OTHER Files/Folders May Exist Within This MASTER FOLDER...=

      =Note:= You may put this file within other Project's MASTER FOLDERS that
            contain existing ~.org~ files /(cloned from other HAP_Doc-Skeleton/
            /template files)/ =If This is the case:= Pay CLOSE Attention to Steps
            3 & 4 below to decide the correct action to take during those steps...

      =Do NOT OVERWRITE ANY PRE-EXISTING FILES or FOLDERS!!!=

      =Otherwise:=
      
      *Name this New Project's MASTER FOLDER* to reflect your Log Book
      Project's Title...

      /(i.e., what you renamed this HAP_General-Log-Book-Lkeleton.org file to)/

      =New Files/Folders will be placed within this MASTER FOLDER...=

2) [ ] =Start Documenting/Logging what was on your mind NOW Before You Loose It!=

      =NOTE:= You may be doing this because you have something you need to
            quickly document and or add a time-stamped log entry for...
            
            You need to write that down before you forget!  =Right?=
            Therefore... as soon as you are done with the first steps above,
            =STOP= and go immediately to the: *📒 Begin LOG Notebook* Binder...
            =Open:= *NEW 🗓 LOG: <2021-03-29 Mon> Generic Title* under: *📅 YYYY:*
            Heading, and Follow Instructions contained in the *:README:*
            drawer...  Rename "Generic Title" to a name that fits the subject
            of your new Log Entry...

            Once your first LOG ENTRY is completed, /(the reason you started/
            /this LOG in the first place)/ You should come back and:
            =Resume Finishing Set Up of This LOG Notebook= /(next steps below)/

3) [ ] =Finish Setting Up The Rest Of This Project LATER= [0/10]

    - [ ] *Change Title of :LATEST_UPDATE: drawer ABOVE:*

        AFTER Cloning, Change *:LATEST_UPDATE:* drawer title ABOVE
        /(within your clone, NOT the Original!)/ to *:LATEST_TEMPLATE_UPDATE:*
        AND Follow Instructions within it...

    - [ ] *Copy/Clone:* ~./media~ /(and contents)/ *to your new project's MASTER FOLDER:*

        /(skip this step if this folder already exists within your project)/
        
        Copy this directory /(into your MASTER FOLDER as a sibling of this file).../ 
        Any external documents or images referenced by your book project should 
        be placed within this ~./media/~ directory...

        There are images within the ~./media/~ directory that are required by
        boilerplate examples within this template... You may inspect/copy etc.,
        these boilerplate examples /(with links to media files)/ to get your
        own images, and external attachments linked and published properly...

        All external links, images, within the boilerplate examples of this
        template may be used as examples for getting your own images, and 
        external attachments linked properly...  

        This single ~./media~ directory will serve media and external attachments 
        for this and other Modular Emacs Document TEMPLATE ~.org~ files that may
        exist within this MASTER FOLDER now or in the future...

        /(IF/WHEN THEY /WERE/ARE COPIED HERE)/

        =Note:= You DON'T need to copy the ~./auto/~ directory... That directory
              will be automatically created by *AuxTex* the first time you export
              this ~.org~ file to ~.PDF~...

    - [ ] *Copy/Clone:* ~./org-templates~ /(and all contents)/ *to your MASTER FOLDER:*

        =WARNING!:= To avoid overwriting existing files, DO NOT COPY this
                  ~./org-templates~ to your MASTER FOLDER IF ONE ALREADY EXISTS!

                  But DO follow the rest of this step so you will know what you
                  should do...

         =OTHERWISE For MASTER FOLDERS that DO NOT already have one:=
         *Copy this NEW directory to your book's MASTER FOLDER*
         /(i.e., as a sibling/ /of this .org file).../

        =Note:= SETUPFILES Within this new or existing directory are called out
              and included by this ~HAP_General-Log-Book-Skeleton.org~ file...
              /(within the file header above)/

        =WARNING:= There may ALREADY be an ~org-templates~ directory existing within
                 your MASTER FOLDER! In that case you will need to merge:
                 ~log-book-setup.org~ AND ~default-tags.org~ /(contained within)/
                 into your existing copies of them instead...       

                 =YOU WON'T WANT TO OVERRITE EXISTING FILES= within this 
                 directory you are already using, /(and modified!!!)/
                 but you may need to update existing files you are NOT
                 using currently if/when you DO start using them...

        Other SETUPFILES within this directory are intended to be used by
        other document style project templates and are not needed for this:
        ~HAP_General-Log-Book-Skeleton~ Document... You may remove the extra
        files if you wish... 

        =HOWEVER:= If you decide to clone another ~HAP_<book-template>.org~
                 file into this project folder it will pick up its
                 associated SETUPFILES automatically because this folder
                 already exists! Consider this case if/when you decide
                 to delete other UNUSED SETUPFILES... They are small text
                 files not really bothering you...

                 /(YOU MAY NEED THEM LATER DEPENDING ON YOUR CASE)/

    - [ ] *Change the* ~#+TITLE:~ *directive at the top of this file:*

          Change to: /"your LOG Book Title"/

    - [ ] *Change the* ~#+SUBTITLE:~ *directive at the top of this file:* 

         Change it to /"Your Log Book's Sub Title"/

    - [ ] *Change the* ~#+EXPORT_FILE_NAME:~ *directive at the top of this file:*

          Change to: /"your-LOG-Book-Project's-Title.pdf"/
          This will be the file name(s) produced during export thence forward
          /(including auto generated files: .tex, etc...)/

    - [ ] *Change the* ~#+TEXT: Copyright © 2022:~ *directive top of this file:*

          Change to: /"Copyright © your info here"/ You are the copyright
          owner of your own documents created from clones of these master
          templates... /(but these MASTER Template Files are to stay under/
          /Harmonic Alchemy Productions copyright. Any Attribution to me/
          /for the template structure of your published docs will be/
          /appreciated... but unnecessary... Thanks! ;-)/

    - [ ] *Change the* ~#+AUTHOR:~ *directive at the top of this file:*

          Change to: /"your NAME"/

    - [ ] *Change the* ~#+EMAIL:~ *directive at the top of this file:*

          Change to: /"your EMAIL"/

    - [ ] *Change the* ~#+TEXT: Created:~ *TIMESTAMP at the top of this file:*

          Put your cursor on the TIMESTAMP: /i.e.,/ <2022-10-05 Wed>
          and type: ~C-c . . RETURN~ The TIMESTAMP will update to NOW.

          =LEAVE THIS DATE ALONE after Setting It The FIRST Time=

          This Date reflects the time/date that you first created this
          new document It should NEVER change after that...

    - [ ] *Change the* ~#+TEXT: Last Published:~ *TIMESTAMP at Publish Time:*

          =Don't Change This UNTIL You Have Actually Exported This File=
          /(as a PDF or HTML, etc. and have PUBLISHED it publically somewhere)/

          Until that publishing time comes leave it alone as:
          ~<NOT Published>~
          
          As soon as this is published or re-published, Replace the
          <unpublished> placeholder with a REAL TIMESTAMP by typing:
          ~C-c . . RETURN~ The new Last Published: <TIMESTAMP> will
          appear in place... Do this EVERY time you publish or update
          an existing publishing... /(this will help you keep track)/

    - [ ] *Change the* ~#+FILETAGS:~ *directive at the top of this file:*

          Add your own tags that match the context of your Log Book...

    - [ ] *Change the* ~#+DESCRIPTION:~ *directive at the top of this file:*

        Compose /Your-LOG-Book-Project's Description/ as a short paragraph
        here... and then use that to change the directive above in the
        File HEADER...

4) [ ] *Export/Publish to PDF File:*

     The *In-Buffer Settings* specified by the SETUPFILES above will 
     get this file looking good when exported as a Standard PDF file.  
     Once you have your project directory all set up as above you are 
     ready to export your first PDF as a test run...

     Sub Headings /(Log Entries)/ could be selected/isolated for exporting
     to a PDF report of work you did for a client or something like that
     and all other log entries and content would not be exported...

        *Issue the following Emacs command:*

           ~M-x org-latex-export-to-pdf~

        *OR* If You Enabled *Xah-Fly-Keys* /"Command Mode"/ Try Shortcut:

           ~SPACE e p~

        *OR Export to OTHER Formats:*

           ~C-c C-e~

           /(a pop-up will show allowing you to choose export method)/

     After *AucTeX* is done parsing/compiling etc., new files named:

           ~HAP_General-Log-Notebook-Skeleton.pdf~
           -and-
           ~HAP_General-Log-Notebook-Skeleton.tex~

     /(or the name you changed it to located at the top of this file)/
     will appear within the same directory as this file... 

     Subsequent repeated calls to the above command will overwrite your
     existing ~.pdf~ -and- ~.tex~ files! /(make backups first if needed!)/ You
     could use the ~./auto/~ directory for backups...

     =If you chose the last option above= LaTeX will output files with other
     extensions for those other output formats...

     =NOTE:= Some SETUPFILES have not been created yet for other eBook formats.
           /(This is a work in progress)/

     =If YOU EXPERIENCE LaTeX ERRORS:= *Consult Buffer:* ~*Org PDF LaTeX Output*~

5) *Purpose of the* ~./auto/~ *Directory:* /(you do not need to copy this)/

   This is or will-be an auto generated folder where your output ~.PDF~ 
   files are created and placed during LaTeX export. You DO NOT need 
   to copy this folder as it is auto generated during org-mode LaTeX 
   processing...

   LaTeX processing will not delete any prior files contained here... 
   Some of them will be updated, but will have backups...  Any files 
   you place within this folder will NOT be lost, unless you delete 
   them... This folder is a good place to store other temporary files 
   you may be creating, generating.. etc...

6) *Purpose of the* ~./org-templates~ *Directory:*

   The files in here are automatically linked and included within this template.
   You don't need to change those settings unless you wish to customize the
   already customized tags, and export options.

   /They are allready set up correctly for the LOG Notebook genre, and/
   /the Category is all set as well... But you can and may modify the/
   /SETUPFILES to fit your needs.../

   Other SETUPFILES within this directory are intended to be used by
   other document style project templates and are not needed for this:
   ~HAP_General-Log-Book-Skeleton.org~ Document...
   You may remove the extra files if you wish... 

   =HOWEVER:= If you decide to clone another ~HAP_<book-template>.org~
            file into this project folder it will pick up its
            associated SETUPFILES automatically because this folder
            already exists! Consider this case if/when you decide
            to delete other UNUSED SETUPFILES... They are small text
            files not really bothering you...

            /(YOU MAY NEED THEM LATER DEPENDING ON YOUR CASE)/

            The DEFAULT Tags defined for all project templates are useful for
            most situations and SOME tags are ALWAYS to be defined for this
            LaTeX publishing system to work.

            /Change the SETUPFILE name ABOVE and within this directory from/
            ~default-tags.org~ /to another name and-or replace some -BUT NOT ALL-/
            /of the tags within to your own tags... see instructions inside the/
            /file.../

7) *Handling Images:*

      Some Images may render too large or too small to fit on a page
      of an exported version of this file... This is easy do fix within
      your content on an image by image basis...
      
      Use *LaTeX* and/or *HTML* attributes as follows on the images that need
      to be a different size...

      =Example:=
      
       #+CAPTION: Example larger size .png file 
       #+NAME:  example:00001
       #+attr_html: :width 600px
       #+attr_latex: :width 100px
       [[./media/lavender-banner.png]]

=The Above Instructions Were Last Modified:= <2023-02-15 Wed> 

So far things are pretty basic PDF for LOG Notebooks... We may get fancy with
other formats later... /(Maybe a Status Report - Invoice thing with nice LOGO,
/itemized tables with TOTAL, etc. - or something like that...)/

I have to get all this documentation done first! /(As you can see, if you been following for the past couple years, things are getting done! Albeit Slowly)/

If you experience problems =Please Open an ISSUE At:= https://github.com/harmonicalchemy/modular-emacs/issues
   
Please use Issues to Ask Questions, Report Problems/Bugs etc., and Suggest Ideas for Improvement... =You guys are my Product Managers=  I am only a User of ONE "seat".
Other folks UX metrics are sorely needed!! Thanks!

=Enjoy!= - Alisha Awen
:END:

* NEW About This Log Notebook:                       :export:
<<LOG_about-this-log-notebook>>
:README:
   Use this section as Front Matter for your Log Book... The summary
   provided here about your log notebook will become more important
   over time as your log book gets filled with lots of information!!!

   This is where you will be looking first years later when searching
   to find something you did years before! Hints to help with that
   process should appear here...
:END:

#+begin_quote
/“Everyone is a moon, and has a dark side which he never shows to anybody.”/ - Mark Twain 
#+end_quote

This Log Note Book was created for...  Yadda Yadda... Yadda...

** References:
:README:
   =Org Mode Links Tip:=

      + To Create a Link Type: ~C-c C-l~ 
         /(then paste: ~link~ & type: "description")/

         =-OR-= Simply Copy/Paste BOILERPLATE:
              /(use placeholders below)/
              And Fill Them In Manually... 
              Copy/Paste more placeholders as
              needed to create more links...

      + To Open a Link Type: ~C-c C-o~

      + To EXPAND a Link Type: ~SPACE b~
         or: ~M-x org-toggle-link-display~

   =BOILERPLATE:= /(clone to add more ref links)/

   ☞ *Heading:* [[~/.GIT/My-Docs/][MY DOCS]] /(comment)/

   - *Heading:* [[link][Link NAME] ] /(comment)/

   ☞ [[yt:aB1cD2eF3gH ][TITLE ] ] *Description:* /(YouTube)/

   - [[link][Link Name] ] *Heading:* /(comment)/
   
   - *_:* [[][] ] /(yadda... yadda... yadda...)/

   - [[][] ] /(_)/

   [[junk][JUNK]]  /(This is a stupid BUG workaround/ /for org-mode link/
         /expansion/compression... If you invoke:/ ~org-toggle-link-display~
         /you will notice this JUNK link DOES NOT compress to a clickable/
         /link title alone.../
         
         /I am not sure if this is due to my Emacs Config or a bug within/
         *Org-Mode* /itself.../

         /I put this workaround in here because if it is not here,/
         /SOME of your external file links created below may not/
         /compress after expansion, even though thy are GOOD links!/

         /Leaving this JUNK link in here acts like a scapegoat/
         /so that your real links below will all compress/expand/
         /normally... I am NOT SURE WHY THIS WORKS??? I'm to busy/
         /to do anything beyond hacking at this point.../
         
         ~org-lint~ /will detect JUNK above... Ignore that warning.../
                  /It's my "METHOD of MADNESS" %^)/
:END:

Here are Links to Information that may be helpful While Using this Log Book Template:

- [[https://latex-tutorial.com/documentclass-latex/][Your Guide to documentclass LaTeX: Types and options]] - /LaTeX-Tutorial.com/

- [[https://orgmode.org/manual/In_002dbuffer-Settings.html][Summary of In-Buffer Settings]] - /The ORG Manual/

- [[https://orgmode.org/manual/Export-Settings.html#Export-Settings][Export Settings]] - /The ORG Manual/

- [[https://orgmode.org/manual/Table-of-Contents.html][Table of Contents]] - /(The ORG Manual)/

- [[https://ctan.org/][Comprehensive TeX Archive Network]] - /CTAN/

- [[https://www.linuxjournal.com/content/org-mode-latex-exporter-latex-non-texers][The org-mode LaTeX exporter]] - /(LaTeX for non-TEXers) LINUX Journal/

- [[https://www.geneatcg.com/emacs-org-mode-export-to-pdf/][Emacs Org Mode export to pdf]] - /(Article by: Gene Ting-Chun Kao)/

- [[https://www.ctan.org/pkg/latexmk/][Fully Automated LaTeX Document Generation]] - /(CTAN - latexmk)/

- [[http://doc.norang.ca/org-mode.html][Org Mode - Organize Your Life In Plain Text!]] - /(Norang.ca Public Docs)/





#+BEGIN_EXPORT latex
\clearpage
\listoffigures*
\clearpage
\listoftables*
\mainmatter
#+END_EXPORT

* 2023 Logs:                                                         :export:
** NEW Lab Experiment Gone WRONG!                       :export:
<2022-12-28 Wed>
<<LOG_lab-experiment-gone-wrong>>
:README:
   =Using the Clocking Feature of this Log Entry=

   - [ ] *Go To One of the HEADINGS Below:*

         /(Summary, Details, or Sub Headings)/

         =Punch the Time Clock:= /(see Clocking Commands: below)/ At
         the heading And then begin working on a task related to
         that Heading...

         =Your Time IS being Recorded Now= /(you will see a/ *:clocking:*
         /item under the heading where time is recorded)/

   - [ ] =Use These Clocking Commands:= /to keep track your time.../

      + *Clock IN:* ~C-c C-x C-i~ /(Begin OR Resume Clocking Current task)/

            This creates a new :CLOCKING: Time Card Entry just
            underneath the HEADING...

            Do this just before starting work on the task... 
            Be in control of your life!

            After doing the above, you can go away and do some 
            work, leaving this heading, log note, etc. to visit 
            other files and/or work on them etc. The clock will 
            be recording your time all the while... You will see 
            in your mode line the elapsed clock time ticking away 
            as you work on a task /(hopefully related to this clock!)/
            and NOT Yac Shaving or being sidetracked!!!

      + *RETURN to Clock Heading:* ~C-c C-x C-j~

            /Go back to the place where you started the clock.../

            You do this after you have worked on a task for a 
            while and you need to come back to update the item's
            info etc., and/or stop the clock before going off to 
            do something else unrelated to the log entry...

      + *Clock OUT:* ~C-c C-x C-o~ /(to stop clocking your time on task)/

            This *Finalizes the Time Card Entry* within:
            ~:CLOCKING:~ /(created earlier when you started the clock)/

            The Clock Entry changes showing start timestamp, end
            timestamp, and total time worked during this segment...  

            =Please DON'T Forget= /Like I often do, LOL.../ i.e., Leaving
            a clock running all day by accident, or worse, leave it
            dangling with the file closed only to open it again and
            get that nasty *Org-Mode Message:* /"What do you want to do/
            /with this?"/ If you do something like that you can always
            come back and directly edit the clock times by hand to
            amend them...  After changing clock times or dates, etc...
            Whatever...

                  ="Onward We Row Mates... Through the log jam!"=

      + *Update Time Card Entry:* ~C-c C-c~ 

            This command will change the total time at the end showing 
            your new calculated time...

            If you need to go away and do something else before finishing
            this task, you can do so after clocking out... When you come
            back simply clock back in again to start another Time Card
            Entry just as before... The new time card entry will appear
            above the earlier one within the ~:CLOCKING:~ drawer... When
            you clock out of this task it will look just like the entry
            below it with a total time worked tagged on the end...

      + *Clock Out & Mark Items Done:* ~C-c C-t~

            When you are all done with a Log Entry use the above key 
            command to mark its Heading *TODO* tag to: *DONE* /(Most of the/ 
            /time this will ALSO clock you out if you are still clocked/ 
            /into the item... But not allways in my experience.../  
            So make sure you are also clocked OUT of an Item After 
            marking it DONE... Type: ~C-c C-x C-j~ to check this...
            /(if no running clock it will tell you and place your/
            /cursor at the heading where you LAST CLOCKED OUT)/

      + ~C-c C-x C-q~ *Cancel Current Clock:* /(in case of accident)/

            This removes currently running clock and forgets any time
            accrued or associated with it...

      + ~C-c C-x C-d~ *Display Clocking Info:* 

            /This will show elapsed times to the right of headings.../
            =Warning!= Using this command will CLUTTER ALL the headings
                     within your org file with those timestamps!!!

:END:

Just Kidding... No Panic... No pandemics were released and no animals were harmed... LOL

This is a dummy placeholder pretend Log Entry... Cloned from the *Meta:* Binder:
*Generic Title* /(General Log Entry Template)/...

Commendeer this fake Log entry /(change it all)/ to use as your already-in-place boilerplate for your VERY FIRST LOG ENTRY...

I made all this dummy content to see a real-world example exported to PDF...
This template was used to set LaTeX styling for LOGBOOKS etc...

Because of that, This DUMMY Example shows up in exported PDF /(for showing this BOILERPLATE dummy content)/

=Styling is all set...= for viewing your next draft... /(you benefit from all my research & tweaking.../ So... You can =NOW= simply change the content to =ANYTHING= org-mode accepts... =DO IT= ;-)

If you don't like the look of they exported PDF, then do what I am doing and change it... /(good luck with that.. LaTeX Styling is a f---ing TIME SYNC)/ LOL

*** NEW Reference:                                                             :noexport:
:README:
   =Org Mode Links Tip:=

      + To Create a Link Type: ~C-c C-l~ 
         /(then paste: ~link~ & type: "description")/

         =-OR-= Simply Copy/Paste BOILERPLATE:
              /(use placeholders below)/
              And Fill Them In Manually... 
              Copy/Paste more placeholders as
              needed to create more links...

      + To Open a Link Type: ~C-c C-o~

      + To EXPAND a Link Type: ~SPACE b~
         or: ~M-x org-toggle-link-display~

   =BOILERPLATE:= /(clone to add more ref links)/

   ☞ *Heading:* [[~/.GIT/My-Docs/][MY DOCS]] /(comment)/

   + *Heading:* [[link][Link NAME] ] /(comment)/

   ☞ [[yt:aB1cD2eF3gH ][TITLE ] ] *Description:* /(YouTube)/

   + [[link][Link Name] ] *Heading:* /(comment)/
   
   + *_:* [[][] ] /(yadda... yadda... yadda...)/

   + [[][] ] /(_)/

   [[junk][JUNK]]  /(This is a stupid BUG workaround/ /for org-mode link/
         /expansion/compression... If you invoke:/ ~org-toggle-link-display~
         /you will notice this JUNK link DOES NOT compress to a clickable/
         /link title alone.../
         
         /I am not sure if this is due to my Emacs Config or a bug within/
         *Org-Mode* /itself.../

         /I put this workaround in here because if it is not here,/
         /SOME of your external file links created below may not/
         /compress after expansion, even though thy are GOOD links!/

         /Leaving this JUNK link in here acts like a scapegoat/
         /so that your real links below will all compress/expand/
         /normally... I am NOT SURE WHY THIS WORKS??? I'm to busy/
         /to do anything beyond hacking at this point.../
         
         ~org-lint~ /will detect JUNK above... Ignore that warning.../
                  /It's my "METHOD of MADNESS" %^)/
:END:

+ *Link to Project:* [[][] ] /(comment)/

*** Time Card:                                                                :export:

#+BEGIN: clocktable :scope tree3 :maxlevel 5 :tstart "<-1w>" :tend "<+1m>" :step week :stepskip0 t :emphasize t :level t :tcolumns 4

Weekly report starting on: [2022-12-26 Mon]
| L | Headline                        | Time |      |      |      |
|---+---------------------------------+------+------+------+------|
|   | *Total time*                      | *2:54* |      |      |      |
|---+---------------------------------+------+------+------+------|
| 2 | \_  /Lab Experiment Gone WRONG!/  |      | /2:54/ |      |      |
| 3 | \_    Summary: [1/3]            |      |      | 0:05 |      |
| 3 | \_    Details:                  |      |      | 2:49 |      |
| 4 | \_      First Experiment [0/3]  |      |      |      | 1:17 |
| 5 | \_        Tables:               |      |      |      | 0:59 |
| 4 | \_      Second Experiment [0/3] |      |      |      | 1:32 |

#+END:

#+LATEX: \newpage

*** ACTIVE Summary: [1/3]                                                      :export:
:CLOCKING:
CLOCK: [2022-12-30 Fri 21:06]--[2022-12-30 Fri 21:10] =>  0:04
CLOCK: [2022-12-28 Wed 12:23]--[2022-12-28 Wed 12:24] =>  0:01
:END:
:README:
   This Summary is mostly to help you find things later when you
   cannot remember when or where is was done... If you go to the
   top of this file and expand all headings to show ALL content,
   then do a search on "~Summary:~" you will be able to quickly
   scroll through and scan these summaries quickly to find what
   you were looking for... 

   Also the *Time Card* /displayed above/ each search hit will give
   more clues by showing important headings you worked on...

   Below is an optional list /(that could also provide links)./ This
   list could be used to itemize things you worked on, but I
   personally find it easier to simply write a short one or two
   line description containing important keywords right here and
   nothing more. I think that is more useful...
:END:

Yadda... Yadda... Yadda...

1. [X] *First Experiment*

2. [-] *Second Experiment*

3. [ ] *New Item 3* /(copy/clone more as needed)/

#+LATEX: \newpage

*** ACTIVE Details:                                                               :export:
**** DONE First Experiment [0/3]
CLOSED: [2022-12-28 Wed 12:42]
:LOGBOOK:
- State "DONE"       from "ACTIVE"     [2022-12-28 Wed 12:42]
:END:
:CLOCKING:
CLOCK: [2022-12-28 Wed 12:24]--[2022-12-28 Wed 12:42] =>  0:18
:END:

This is a NEW Item I am currently working on... The clock is ticking... Yadda Yadda Yadda...

***** Plain Lists:  

The LATEX export back-end accepts the ‘environment’ and ‘options’ attributes for plain lists. Both attributes work together for customizing lists, as shown in the examples:

Some ways to say "Hello":

#+ATTR_LATEX: :environment itemize*
#+ATTR_LATEX: :options [label={}, itemjoin={,}, itemjoin*={, and}]
#+CAPTION: This is the LIST Caption

- Hola /(first level List item)/

   + second level list item

      - Third level list item

         + Fourth level list item

         + Fourth level list item

      - Third level list item

         1. Fourth Level Numbered Item

         2. Fourth Level Numbered Item

         3. Fourth Level Numbered Item

   + second level list item

- Bonjour

   + second level list item

- Guten Tag.

   + second level list item

***** Tables:
:CLOCKING:
CLOCK: [2022-12-31 Sat 13:26]--[2022-12-31 Sat 13:27] =>  0:01
:END:

Org Mode Tables are a bit more complicated than Markdown Mode tables which are static tables only.  Also the syntax is different (darn it!) but these org-mode tables are great because they are smart tables!  You most probably won't type a table like this outside of Emacs. The manual alignment without tool-support is very tedious. You don't have do careful tedious aligning or restructuring your tables in org-mode!  You can enter them very sloppy like so:

#+CAPTION: Normal Table Default Alignment
| My Column 1 | My Column 2 | Last Column |
|-------------+-------------+-------------|
|          42 | foo         | bar         |
|          23 | baz         | abcdefg     |
|-------------+-------------+-------------|
|          65 |             |             |


Once you hit tab on above it will look like this:

#+CAPTION: Normal Table Default Alignment
| My Column 1 | My Column 2 | Last Column |
|-------------+-------------+-------------|
|          42 | foo         | bar         |
|          23 | baz         | abcdefg     |
|-------------+-------------+-------------|
|          65 |             |             |


Cool!  It even knows how to justify numbers differently than text!  And there's a bunch more it can do... (i.e., spreadsheet stuff)...

Org tables have cells of at most one line long: i.e., *There Is No Such Thing As A Multi-Line Table Cell In Org.*

****** Column formatting:


Columns are automatically aligned by default as such:

#+ATTR_LATEX: :environment itemize*
#+ATTR_LATEX: :options [label={}, itemjoin={,}, itemjoin*={, and}]
#+CAPTION: Default Table Column Formatting
- /Number-rich Columns to the Right/
- /String-rich Columns to the Left/

******* Table with aligned cells

/If you want to override the automatic alignment, use:/ ~<r>~, ~<c>~ or ~<l>~.

#+CAPTION: Table with aligned columns
|          <r> |     <c>      | <l>          |
|            1 |      2       | 3            |
|        Right |    Center    | Left         |
| xxxxxxxxxxxx | xxxxxxxxxxxx | xxxxxxxxxxxx |


******* Header row

You can create tables with an header row (by using an horizontal line of dashes to separate it from the rest of the table).

#+CAPTION: Table with an header row
| Name of column 1 | Name of column 2 | Name of column 3 |
|------------------+------------------+------------------|
| Top left         | Top middle       |                  |
|                  |                  | Right            |
| Bottom left      | Bottom middle    |                  |

******* A very long table to test "sticky headers":
:CLOCKING:
CLOCK: [2022-12-31 Sat 13:27]--[2022-12-31 Sat 13:32] =>  0:05
:END:


#+ATTR_LATEX: :environment longtable :align l|lp{3cm}r|l
#+CAPTION: Extra LONG Table (to see how LaTeX handles them)
| *Name of column 1* | *Name of column 2* | *Name of column 3* |
|------------------+------------------+------------------|
|         /Top Left/ | /Top Middle/       | /Top Right/        |
|                2 |                  |                  |
|                3 |                  |                  |
|                4 |                  |                  |
|                5 | /Middle/           | /Right/            |
|                6 |                  |                  |
|                7 |                  |                  |
|                8 |                  |                  |
|                9 |                  |                  |
|               10 | /Middle/           | /Right/            |
|               11 |                  |                  |
|               12 |                  |                  |
|               13 |                  |                  |
|               14 |                  |                  |
|               15 | /Middle/           | /Right/            |
|               16 |                  |                  |
|               17 |                  |                  |
|               18 |                  |                  |
|               19 |                  |                  |
|               20 | /Middle/           | /Right/            |
|               21 |                  |                  |
|               22 |                  |                  |
|               23 |                  |                  |
|               24 |                  |                  |
|               25 | /Middle/           | /Right/            |
|               26 |                  |                  |
|               27 |                  |                  |
|               28 |                  |                  |
|               29 |                  |                  |
|               30 | /Middle/           | /Right/            |
|               31 |                  |                  |
|               32 |                  |                  |
|               33 |                  |                  |
|               34 |                  |                  |
|               35 | /Middle/           | /Right/            |
|      /Bottom left/ | /Bottom middle/    | /Bottom Right/     |


****** Table Placement:
******* Align Table Centred: /(the default)/

=Normal DEFAULT Tables are Centered= 


#+CAPTION: DEFAULT TABLE (as is)
| a | b | c |
|---+---+---|
| 1 | 2 | 3 |
| 4 | 5 | 6 |


******* Align Table Flush RIGHT:


#+LATEX: \hfill
#+ATTR_LATEX: :center nil
#+CAPTION: Table Flush RIGHT
| a | b | c |
|---+---+---|
| 1 | 2 | 3 |
| 4 | 5 | 6 |


Here the hfill adds infinite stretch before the table, so it pushes the table to the right.

******* Align Table Flush LEFT:


#+LATEX: \noindent
#+ATTR_LATEX: :center nil
#+CAPTION: Table Flush LEFT
| a | b | c |
|---+---+---|
| 1 | 2 | 3 |
| 4 | 5 | 6 |
#+LATEX: \hfill


The noindent just gets rid of the indentation of the first line of a paragraph which in this case is the table. The hfill adds infinite stretch after the table, so it pushes the table to the left.

******* Table size:

#+ATTR_HTML: :width 100%
#+CAPTION: Full Width Table
| Cell in column 1, row 1 | Cell in column 2, row 1 |
| Cell in column 1, row 2 | Cell in column 2, row 2 |

****** Using Table.el to do More With Tables:
:CLOCKING:
CLOCK: [2022-12-31 Sat 13:32]--[2022-12-31 Sat 13:32] =>  0:00
:END:

*org-mode* has 2 table formats, the default *org-table* and the other is *table.el*... You can do a lot more by converting your tables to use Table.el...  To toggle between the two different modes type:

*C-c ~* /(tilde)/

=Tip:= Add a blank line above and below the table.
     The blank lines should prevent a bug when converting
     the table with *C-c ~*.

******* Example:
:CLOCKING:
CLOCK: [2022-12-31 Sat 13:32]--[2022-12-31 Sat 14:25] =>  0:53
:END:

1. [ ] Place your cursor, /a.k.a the point/, inside your updated
      table then type ~C-c ~~ /(tilde)/ and answer *y*.
      The table in example below is normal org-table
      After doing above comment it will change to a
      boxed in look...

#+CAPTION: Raw Table with Extra Long Column
| Term      | Definition                                                                                               |
| keyword 1 | Extra Long line definition that continues beyond your frame width or beyond your set Olivetti line width |
| keyword 2 | Extra Long line definition that continues beyond your frame width or beyond your set Olivetti line width |


1. [ ] Place Cursor Inside Updated Table Then Type: ~C-c '~
      /A New Special Table Editing Window Will Appear.../

2. [ ] Place Cursor Inside Second Column And Type: ~C-c C-c <~

      /Do this command repeatedly until the column is the/
      /desired width.../

3. [ ] =Save Table With:= ~C-c '~ /(to view results of edits)/
   
      /The Example Below is result of first pass.../
      /(After converting back to org-table for exporting)/

#+CAPTION: Resized Table (try #1)
| *Term*      | *Definition*                                            |
| keyword 1 | Extra Long line definition that continues beyond your |
|           | frame width or                                        |
|           | beyond your set Olivetti line width                   |
| keyword 2 | Extra Long line definition that continues beyond your |
|           | frame width or                                        |
|           | beyond your set Olivetti line width                   |

   =Tip:= Use the universal argument key binding ~C-u~ to quickly repeat
        this step. For example, If your right column is 106 characters
        as in the above example, and you want to redice the right column
        width to 50 characters do: ~C-u 56 C-c C-c <~ which will repeat:
        ~C-c C-c <~ command 56 times.

After typing: ~C-c '~ /(to save and exit the table editor)/ you will see your table resized as the above table now looks below...

#+CAPTION: Resized Table (Final)
| *Term*      | *Definition*                |
| keyword 1 | Extra Long line           |
|           | definition that continues |
|           | beyond your frame width   |
|           | or beyond your set        |
|           | Olivetti line             |
|           | width                     |
| keyword 2 | Extra Long line           |
|           | definition that continues |
|           | beyond your frame width   |
|           | or beyond your set        |
|           | Olivetti line             |
|           | width                     |

#+LATEX: \newpage

***** LiliPond Music Notation:

****** Example 1:

#+begin_comment
   #+PROPERTY: header-args:lilypond :noweb yes
#+end_comment

#+begin_src lilypond :file ./auto/ionian.pdf

\header {
  title = "The Ionian Mode (modern major mode)"
}

\paper {
    paper-width = 23\cm
    paper-height = 3.0\cm
    top-margin = 0.0\cm
    bottom-margin = 0.0\cm
    left-margin = 0.0\cm
    right-margin = 0.0\cm
    indent = 1.6\cm
    }

\relative c' {
  c d e f
  g a b c
  b a g f
  e d c d
  e f g a
  b c b a
  g f e d
  c1
}
#+end_src
#+RESULTS:
[[file:./auto/ionian.pdf]]

****** Example 2:

#+begin_src lilypond :file ./auto/MuseScore-Frescobaldi-Lilypond-Emacs.pdf
\version "2.23.82"
%% automatically converted by musicxml2ly from
%% Str-Qt-Score_2bar-Example-Template.mxl
%% Modified for best Fit on Final PDF MANUALY...

%% \pointAndClickOff

\header {
    title = "2 Bar Example Boilerplate"
    encodingsoftware =  "MuseScore 3.6.2"
    encodingdate =  "2022-12-29"
    }

\paper {
    paper-width = 23.0\cm
    paper-height = 9.0\cm
    top-margin = 0.0\cm
    bottom-margin = 0.0\cm
    left-margin = 2.6\cm
    right-margin = 2.6\cm
    indent = 0.0\cm
    }

\layout {
  \context {
    \Score
    proportionalNotationDuration = #(ly:make-moment 1/16)
    autoBeaming = ##f
  }
}

PartPOneVoiceOne =  \relative fis' {
    \clef "treble" \time 12/8 \key c \major | % 1
    \stemUp fis4 \stemUp a4 \stemUp e8 \stemDown cis'4 \stemDown fis4
    \stemDown d4 \stemDown c8 \tempo 4.=80 | % 2
    \stemUp fis,4 \stemUp a4 \stemUp e8 \stemDown cis'4 \stemDown fis4
    \stemDown d4 \stemDown c8 \bar "|."
    }

PartPTwoVoiceOne =  \relative cis' {
    \clef "treble" \time 12/8 \key c \major | % 1
    \stemUp cis4 r8 \stemUp c4 r8 \stemUp e4 r8 \stemUp e4 r8 | % 2
    \stemUp cis4 r8 \stemUp c4 r8 \stemUp e4 r8 \stemUp e4 r8 \bar "|."
    }

PartPThreeVoiceOne =  \relative gis {
    \clef "alto" \time 12/8 \key c \major | % 1
    \stemUp gis4 r8 \stemUp ais4 r8 \stemDown dis4 r8 \stemDown d4 r8 | % 2
    \stemUp gis,4 r8 \stemUp ais4 r8 \stemDown dis4 r8 \stemDown d4 r8
    \bar "|."
    }

PartPFourVoiceOne =  \relative g, {
    \clef "bass" \time 12/8 \key c \major | % 1
    \stemUp g2 \stemDown e'2 \stemUp f,2 | % 2
    \stemUp g2 \stemDown e'2 \stemUp f,2 \bar "|."
    }

% The score definition
\score {
    <<
        \new StaffGroup
        <<
            \new Staff
            <<
                \set Staff.instrumentName = "Violin I"
                
                \context Staff << 
                    \mergeDifferentlyDottedOn\mergeDifferentlyHeadedOn
                    \context Voice = "PartPOneVoiceOne" {  \PartPOneVoiceOne }
                    >>
                >>
            \new Staff
            <<
                \set Staff.instrumentName = "Violin II"
                
                \context Staff << 
                    \mergeDifferentlyDottedOn\mergeDifferentlyHeadedOn
                    \context Voice = "PartPTwoVoiceOne" {  \PartPTwoVoiceOne }
                    >>
                >>
            \new Staff
            <<
                \set Staff.instrumentName = "Viola"
                
                \context Staff << 
                    \mergeDifferentlyDottedOn\mergeDifferentlyHeadedOn
                    \context Voice = "PartPThreeVoiceOne" {  \PartPThreeVoiceOne }
                    >>
                >>
            \new Staff
            <<
                \set Staff.instrumentName = "Violoncello"
                
                \context Staff << 
                    \mergeDifferentlyDottedOn\mergeDifferentlyHeadedOn
                    \context Voice = "PartPFourVoiceOne" {  \PartPFourVoiceOne }
                    >>
                >>
            >>
        >>
    \layout {}
    }
#+end_src
#+RESULTS:
[[file:./auto/MuseScore-Frescobaldi-Lilypond-Emacs.pdf]]

* 2024 Logs:                                                         :export:

/Not Here Yet but keep logging... The New Year will be here soon enough!/

=When the New Year Comes Around: RENAME This Heading to the Next YEAR=

=DON'T Clone this Heading...= /(Leave it here as the LAST Top Level Heading before the Meta Binder...  It must stay Titled as the Next Upcoming YEAR)/ 

=After Doing Above:= Create a NEW Top Level Heading with the Current YEAR and Use that to place new Cloned LOG Entry Templates from the Meta Section...

=The Following LaTeX Snippit MUST be placed AFTER All LOG Entries=
/This Starts the BACK MATTER Section of this Log Book (nothing in it yet)/





#+BEGIN_EXPORT latex
\backmatter
#+END_EXPORT

* ⎘ Meta: /(Usage & Templates)/                                 :noexport:
** 📄 Introduction:
:README:
   Use this Standard Log /(template)/ as a multi purpose time card/log
   entry vehicle/instrument...

   Use one for work, one for home, one for play, for creative projects,
   for pretty much anything that needs to be recorded with time and
   events in a log... I am honing this new scheme to be the General
   Purpose Log Note Template for everything that I ever dreamed of
   having.  And for you too!

   I stopped using Markdown files for this purpose a few years ago...
   This makes total sense as *Org-Mode* was designed exclusively for
   such things! *Markdown* is great for composing content intended for
   web pages etc. =Emacs Org Mode is Vastly Superior as a Publishing=
   =Environment=, with many features and power, completely agnostic of
   final publishing format... Whereas markdown mode excels doing one
   thing only... Translating author structured plain text into
   beautiful web pages... /(which is a good thing)/

   I finally bit the long curve bullet and learned Emacs Org Mode
   /(after many many many years of using Emacs without it!)/ Today,
   looking back with current knowledge to me is like going back to
   a /"*Dec VT220* green screen *dumb terminal*"/ after experiencing
   *X Windows* on a Big *HP-UX Workstation!*

   Yeah, that's a personal story from the past, lol... All you Mac
   users out there, please realize that your beautiful Apple desktop
   is in fact an *HP-UX Motif X-Windows widget set clone*!  That's what
   Steve Jobs believed to be the best X-Windows tool-kit of the day
   /(when he was building the NeXT computer)/...  So... Yup he copied
   that! The Applications Doc at the bottom of your screen is a dead
   giveaway. Hewlet Packard was first to use such UI concepts...
   /(back before the dawning of the web we loved those HPUX Workstations!)/
:END:
*** Emacs Shorthand Command Key Notation:

The command key conventions used in the instructions below, /(as well as all *Harmonic Alchemy Productions* docs)/, follow *Standard Emacs* command key naming conventions.

Official GNU Emacs documentation uses a shorthand notation to indicate the *Ctrl* key as an upper case *C-* (/with minus appended/). Upper case *M-* (/with minus appended/) is the shorthand notation for the Emacs *META* key...

*** Important Note For Mac Users:

On Mac OS, *Modular Emacs* maps your *Ctrl* key to the *Apple Command* key. Emacs *META* is mapped to both *Alt* and *Ctrl* keys... Outside of Emacs all those keys function normally.  

Therefore, for Mac users, anytime you either see *C-* or *Ctrl* below, use your *Apple Command* key for that when using Modular Emacs.  Anytime you see either *M-* or *META* below, use *Alt* or *Ctrl* keys for that when using Modular Emacs. 

Anytime you are using Modular Emacs following instructions from standard vanilla Emacs docs, keep in mind your ~Ctrl~ and ~META~ keys are not /"standard"/ anymore and you must make a mental translation.  Beyond that, you will be fine following other emacs tutorials etc.  Hey... you Mac enthusiasts are used to that kind of /"being different"/ stuff anyway, right? Being one of /"the rest of us"/ that is... What the heck does that mean anyway? LOL

The above key assignments were done to get the *Emacs C-* key closer to the space bar where it can be activated with your left thumb instead of contorting to get at it with your pinkie finger. This makes using *Xah Fly Keys* even easier to use and less stressful on your fingers...

In the Official Emacs documentation you will commonly find key command notations such as *C-x* or *M-x*... This means: Hold the *Ctrl* /(or *META*)/ key down while typing the *x* key.  

Any time you see this notation, regardless of what key may be connected to it with a dash /(e.g., *C-c*, *M-5*, etc.)/, this means to hold the *Ctrl*-or-*META* key down while you press the other key connected to it with the dash... If you have a command that includes many *C-key* or *M-key* commands in succession simply hold the *Ctrl*-or-*META* key down the entire time you type the other keys and then let go...

If you see other keys alone separated by a space after the *C-x* or *M-x* /(e.g., C-x *d*, M-x *b*, etc.)/ this means to type that key /AFTER/ letting go of the *Ctrl*-or-*META* key...

*Got that?* That's the key notation system we use here... It is all standard Emacs...  The above paragraphs are mostly for the benefit of new Emacs users! And there is more to learn below. If you are an Emacs/Org-Mode veteran please bear with us...

*** Org Mode Timestamps and Clocking:

This Template utilizes the default *Org-Mode:* "*C-c* ." command /(i.e., That's Ctrl-c and then type a dot. This Enters a timestamp range at the cursor position)/. The command employs *org-evaluate-time-range* to compute time on task.  This is useful for timesheets etc. 

In addition, the *Log Entry (template)* stores and tracks *Org-Mode :CLOCKING:* entries and displays results in a *Time Card Table* with total time computed... 

Common time clocking commands are defined within the *Log Entry (template)* itself. Any time you need to look up clocking commands, open the *:README:* drawer under the *Log Entry (template)* heading by placing your cursor over it and hitting *TAB*.

Additional commands for using *Org-Mode* with Modular Emacs will be explained here if needed, as well as other *Harmonic Alchemy Modular Emacs Templates* that get produced in the future...

** ❔ HowTo:
:README:
   This Log Notebook is being designed as these docs are being written...
   At first much of the design is being done /manually/ while formats,
   concepts, are tried and tested.  Eventually much of the instructions
   below will become much simpler as there will be capture templates,
   and processes in place that replace the need to manually copy/paste
   things as we are doing initially below...  

   =Please bear with the author/architect as she makes up her mind about=
   =how to do things in here...=  *Org-mode, LaTeX options are vast!* Not
   to mention a sea of extra packages that could be tried out...
   /I feel like I am re-inventing wheels within rabbit holes!/ lol

   =Note:= If you are making your very first log entry within a brand new
         clone of this template, =DON'T use a clone from the= *Log Entry*
         *(template)* =just yet=. /Instead use the dummy boilerplate/
         /placeholder Log Entry /(withtimestamp)/ /already in place as/
         /your first heading under the/ *Begin Log Notebook:* /heading./

   That first boilerplate log entry is there as an example to guide you
   in making your first completed log book entry. You may rename/commandeer
   it for your purposes now... Otherwise you will end up deleting it later...
   /Don't be wasteful... Recycle!/ lol ;-)

   Also for first time entry within your brand new log book, Skip the next
   two headings below /(copy and paste instructions)/ and continue following
   instructions under the: *Edit-Compose your new Log Entry:* heading /(as you/
   /will be commandeering the dummy boilerplate log entry as your first log/
   /entry)/. Instructions for working on a new Cloned Log Entry are the same
   as for updating/emending an existing one from that point on...

   =Otherwise=, if you already have one or more existing log entries from
   before, continue following instructions immediately below beginning 
   with: *Copy/Clone Log Entry (template)*
:END:
*** =Copy/Clone:= LOG: <2021-03-29 Mon> Generic Title /(from *⎘ Templates* Binder)/

- [ ] =Select Heading= /(named above)/ under the *⎘ Templates* Binder,
      using normal Emacs selection methods. i.e., Type ~t~ key to set
      the mark for selection, /(xah-fly-keys Command/ /Mode)/ or use
      ~C-SPACE~ /(normal Emacs)/, and move the point to get the entire
      heading, and all of its contents, but NOTHING else...
      =and copy it...=

      =Note:= Before Copying Selected Text, ensure your cursor is at the
            end of it BUT not be part of any items after it...
            Placing your cursor on the first column of the next line
            will include the invisible new-line character which is what
            you want, but any text directly under the cursor on the
            next line will not be copied...  Later, after pasting this
            text somewhere else, your cursor will end up sitting on the 
            first column of a blank line under the pasted text.
            /(exactly as intended)/

- [ ] =Complete the Copy Operation= Type ~c~ /(xah-fly-keys Command Mode)/.
      This will save the selection for pasting later, /(the highlighted/
      /text will go back to normal)/... You should have gotten only the
      Single LOG Entry with ALL its contents, BUT nothing else below
      it...

      =Note:= If you type: "*spacebar t*" /(xah-fly-keys leader key command)/ 
            it will show you the contents of your paste buffer...  You 
            can see the LAST item you copied in there AT THE TOP...  
            To get out of the paste buffer view, type: "*spacebar u*" and 
            it will return you to where you were before...



*** =Paste Cloned LOG Entry:=

- [ ] =Advance cursor= to a blank line just below the LAST Most Recent
      LOG entry under heading =2022= within the =Begin Log:= section,
      and press *enter* a couple times to get your cursor on a fresh
      clean line with some extra space above and below it...
      /(Below any previously time stamped entries you may already/
      /have placed)/...

- [ ] =Press:= ~v~ /(xah-fly-keys Command Mode)/ to paste your cloned Log
      Entry template... If you find out that what you copied also
      included some unwanted text directly below it, no problems...
      Just delete that part now... 

      =Note:= If you accidentally copied one or more previously
            invisible bullets to column one on a blank line they
            will create an invisible "ghost" heading that you will
            now need to delete...
            
            You will know this if you see an org-ellipsis "⤵"
            symbol on a line by itself indicating a heading but
            no text... Simply delete that whole line and it will
            go away... Now you are ready to compose your new
            log entry...



*** Edit-Compose New LOG Entry:

=Note:= If this is your first time using this log, don't bother cloning
      a NEW log entry as there is a dummy boilerplate placeholder Log 
      Entry ALREADY in place for you to use...
      /(initially there as an example)/

      The instructions below for modifying the Boilerplate Log Entry,
      or Editing a new Cloned Log Entry Template are pretty much the
      same... /(differences will be noted in instructions below)/

- [ ] =Place cursor directly on the existing timestamp= of the NEW
      Log Entry, and enter the key binding: ~C-c .~ /(i.e., press/ ~Ctrl~
      /key while holding/ ~c~ /and then type a dot ~.~ /)/ A date chooser
      panel will pop up...

- [ ] =Type one more dot:= ~.~ to force the calendar selection to the
      current time and date and then, Press ~ENTER~ to accept your
      choice... /This will update the existing older timestamp with/
      /the current date/time.../ Check to make sure the timestamp was
      properly updated and then move on to the next step... This
      timestamp will not be updated after that.  It records the
      initial time of your new log entry to the Day and time you
      first created it...

- [ ] =You are now ready to start= making entries within your New
      Log Entry... Your timestamp indicates the present, /-and-/ you
      are all set to begin recording your time...

- [ ] =Follow the= ~:README:~ directions within the Time Card section
      contained within your fresh new log entry to learn how to
      /"clock in"/ and /"clock out"/ of your log entry as you work on
      the tasks...



*** Enter New LOG Entry Details:

Two sub headings have been provided for your use /(if you need them)/. However, you may structure your log entries any way you wish.  The two provided headings:  *Summary* and *Details* are simply suggestions to help make your log entries a bit more organized...

The *Summary* heading could be used to log the main executive summary points, /(which you would include in the exported PDF as a report to give to your boss or clients)/. 

Conversely, the *Details* heading could contain a complete, thorough log of your work, which would be excluded from the final PDF report.  Everything under *Details* heading would be extra information that you don't want to bother your clients or boss with /(unless they ask for more detail of course)/. In that case, you will have it all recorded and organized for easy access later if needed...

Place the *:noexport:* tag at the end of any org outline heading to exclude it and all its children from the PDF upon export...  You can add as much detail as you need within these excluded sections without cluttering up your final PDF.  The entire main heading: *How to Use this Template:* is already excluded from the final PDF, so it can be left in and your PDF will only include the *Begin Log:* section...

*** Export LOG as a PDF Report:

Anytime you need to see your Log Notebook as a nicely printed PDF report, you can export it using the following custom key command: ~SPACE e p~ /(i.e., press ~spacebar~, type ~e~ and then ~p~ *(Xah-Fly-Keys Command Mode)* extended leader key sequence)/
** NEW Generic Log Entry /(General Log Entry Template)/
<2021-03-29 Mon>
<<LOG_Generic-Title>>
:README:
   =Using the Clocking Feature of this Log Entry=

   - [ ] *Go To One of the HEADINGS Below:*

         /(Summary, Details, or Sub Headings)/

         =Punch the Time Clock:= /(see Clocking Commands: below)/ At
         the heading And then begin working on a task related to
         that Heading...

         =Your Time IS being Recorded Now= /(you will see a/ *:clocking:*
         /item under the heading where time is recorded)/

   - [ ] =Use These Clocking Commands:= /to keep track your time.../

      + *Clock IN:* ~C-c C-x C-i~ /(Begin OR Resume Clocking Current task)/

            This creates a new :CLOCKING: Time Card Entry just
            underneath the HEADING...

            Do this just before starting work on the task... 
            Be in control of your life!

            After doing the above, you can go away and do some 
            work, leaving this heading, log note, etc. to visit 
            other files and/or work on them etc. The clock will 
            be recording your time all the while... You will see 
            in your mode line the elapsed clock time ticking away 
            as you work on a task /(hopefully related to this clock!)/
            and NOT Yac Shaving or being sidetracked!!!

      + *RETURN to Clock Heading:* ~C-c C-x C-j~

            /Go back to the place where you started the clock.../

            You do this after you have worked on a task for a 
            while and you need to come back to update the item's
            info etc., and/or stop the clock before going off to 
            do something else unrelated to the log entry...

      + *Clock OUT:* ~C-c C-x C-o~ /(to stop clocking your time on task)/

            This *Finalizes the Time Card Entry* within:
            ~:CLOCKING:~ /(created earlier when you started the clock)/

            The Clock Entry changes showing start timestamp, end
            timestamp, and total time worked during this segment...  

            =Please DON'T Forget= /Like I often do, LOL.../ i.e., Leaving
            a clock running all day by accident, or worse, leave it
            dangling with the file closed only to open it again and
            get that nasty *Org-Mode Message:* /"What do you want to do/
            /with this?"/ If you do something like that you can always
            come back and directly edit the clock times by hand to
            amend them...  After changing clock times or dates, etc...
            Whatever...

                  ="Onward We Row Mates... Through the log jam!"=

      + *Update Time Card Entry:* ~C-c C-c~ 

            This command will change the total time at the end showing 
            your new calculated time...

            If you need to go away and do something else before finishing
            this task, you can do so after clocking out... When you come
            back simply clock back in again to start another Time Card
            Entry just as before... The new time card entry will appear
            above the earlier one within the ~:CLOCKING:~ drawer... When
            you clock out of this task it will look just like the entry
            below it with a total time worked tagged on the end...

      + *Clock Out & Mark Items Done:* ~C-c C-t~

            When you are all done with a Log Entry use the above key 
            command to mark its Heading *TODO* tag to: *DONE* /(Most of the/ 
            /time this will ALSO clock you out if you are still clocked/ 
            /into the item... But not allways in my experience.../  
            So make sure you are also clocked OUT of an Item After 
            marking it DONE... Type: ~C-c C-x C-j~ to check this...
            /(if no running clock it will tell you and place your/
            /cursor at the heading where you LAST CLOCKED OUT)/

      + ~C-c C-x C-q~ *Cancel Current Clock:* /(in case of accident)/

            This removes currently running clock and forgets any time
            accrued or associated with it...

      + ~C-c C-x C-d~ *Display Clocking Info:* 

            /This will show elapsed times to the right of headings.../
            =Warning!= Using this command will CLUTTER ALL the headings
                     within your org file with those timestamps!!!

:END:

This Log Entry is about: Yadda... Yadda... Yadda...

*** NEW Reference:
:PROPERTIES:
:UNNUMBERED: notoc
:END:
:README:
   =Org Mode Links Tip:=

      + To Create a Link Type: ~C-c C-l~ 
         /(then paste: ~link~ & type: "description")/

         =-OR-= Simply Copy/Paste BOILERPLATE:
              /(use placeholders below)/
              And Fill Them In Manually... 
              Copy/Paste more placeholders as
              needed to create more links...

      + To Open a Link Type: ~C-c C-o~

      + To EXPAND a Link Type: ~SPACE b~
         or: ~M-x org-toggle-link-display~

   =BOILERPLATE:= /(clone to add more ref links)/

   ☞ *Heading:* [[~/.GIT/My-Docs/][MY DOCS]] /(comment)/

   - *Heading:* [[link][Link NAME] ] /(comment)/

   ☞ [[yt:aB1cD2eF3gH ][TITLE ] ] *Description:* /(YouTube)/

   - [[link][Link Name] ] *Heading:* /(comment)/
   
   - *_:* [[][] ] /(yadda... yadda... yadda...)/

   - [[][] ] /(_)/

   [[junk][JUNK]]  /(This is a stupid BUG workaround/ /for org-mode link/
         /expansion/compression... If you invoke:/ ~org-toggle-link-display~
         /you will notice this JUNK link DOES NOT compress to a clickable/
         /link title alone.../
         
         /I am not sure if this is due to my Emacs Config or a bug within/
         *Org-Mode* /itself.../

         /I put this workaround in here because if it is not here,/
         /SOME of your external file links created below may not/
         /compress after expansion, even though thy are GOOD links!/

         /Leaving this JUNK link in here acts like a scapegoat/
         /so that your real links below will all compress/expand/
         /normally... I am NOT SURE WHY THIS WORKS??? I'm to busy/
         /to do anything beyond hacking at this point.../
         
         ~org-lint~ /will detect JUNK above... Ignore that warning.../
                  /It's my "METHOD of MADNESS" %^)/
:END:

- *Link to Project:* [[][] ] /(comment)/

*** NEW Time Card:
:PROPERTIES:
:UNNUMBERED: notoc
:END:

#+BEGIN: clocktable :scope tree3 :maxlevel 6 :tstart "<-1w>" :tend "<+1m>" :step week :stepskip0  t :emphasize t :level t :tcolumns 3

#+END:

*** NEW Summary: [1/3]
:README:
   This Summary is mostly to help you find things later when you
   cannot remember when or where is was done... If you go to the
   top of this file and expand all headings to show ALL content,
   then do a search on "~Summary:~" you will be able to quickly
   scroll through and scan these summaries quickly to find what
   you were looking for... 

   Also the *Time Card* /displayed above/ each search hit will give
   more clues by showing important headings you worked on...

   Below is an optional list /(that could also provide links)./ This
   list could be used to itemize things you worked on, but I
   personally find it easier to simply write a short one or two
   line description containing important keywords right here and
   nothing more. I think that is more useful...
:END:

Yadda... Yadda... Yadda...

1. [X] *New Item 1:* /(this represents a completed item)/

2. [-] *New Item 2:* /(this represents a currently "radio active" item)/

3. [ ] *New Item 3:* /(this represents a new item not worked on yet)/

3. [ ] *New Item:* /(copy/clone more of these as needed)/

*** NEW Details:
**** NEW New Item 1 /(placeholder)/ [0/4]
:PROPERTIES:
:UNNUMBERED: notoc
:END:
:BOILERPLATE:

  =Delete This BOILERPLATE DRAWER If You Don't Need It...=

  The following list contains Babel Source Code Blocks that are
  often needed for something I am writing or "Logging" about...
  I use them so much I decided to include them in this template...

  - [ ] *__:* /(__)/

      #+begin_src conf
       keyword1:     Value1 
       keyword2:     Value2 
       keyword3:     Value 
      #+end_src

  - [ ] *__:* /(__)/

      #+begin_src bash
       sudo dnf install emacs
       sudo apt install emacs
      #+end_src

  - [ ] *__:* /(__)/

      #+BEGIN_SRC emacs-lisp :results output
       ;; Initialize Local Vars from GLOBAL CONSTANTS;
       (let ((h (list 'text-pixels ME--CODE-FRAME-HEIGHT))
             (w (list 'text-pixels ME--CODE-FRAME-WIDTH)))
         (princ "CAR h: ")
         (princ (car h))
         (princ "\n")
         (princ "CDR h: ")
         (princ (cdr h))
         (princ "\n\n")
         (princ "CAR w: ")
         (princ (car w))
         (princ "\n")
         (princ "CDR w: ")
         (princ (cdr w)))
      #+END_SRC

      #+RESULTS:
      : CAR h: text-pixels
      : CDR h: (42)
      : 
      : CAR w: text-pixels
      : CDR w: (92)

  - [ ] =LaTeX Code Within ~.Org~ Docs:=

      #+begin_comment

      Code Embedded ~In-line~ within paragraphs:
      
         Put: @@latex:<LaTeX Code Here>@@ Anywhere
         Within a paragraph...

      #+LATEX: % Any Arbitrary LaTeX Code...
      
      #+LATEX: \newpage % Start New Page

      #+BEGIN_EXPORT latex
      %% Put LaTex Code In Here...
      #+END_EXPORT

      #+BEGIN_LaTeX
      %% Put LaTex Code In Here...
      #+END_LaTeX

      #+end_comment

:END:

New Item Details... Yadda... Yadda... Yadda...

Re-Purpose these as needed and Delete anything you don't need...

Add sub headings as needed...

Don't forget to clock-in to HEADINGS while you work on them...
AND... Don't forget to Clock OUT when you are DONE... %^)

**** NEW New Item 2 /(placeholder)/ [0/3]
:PROPERTIES:
:UNNUMBERED: notoc
:END:
:BOILERPLATE:

  =Delete This BOILERPLATE DRAWER If You Don't Need It...=

  The following list contains Babel Source Code Blocks that are
  often needed for something I am writing or "Logging" about...
  I use them so much I decided to include them in this template...

  - [ ] *__:* /(__)/

      #+begin_src conf
       keyword1:     Value1 
       keyword2:     Value2 
       keyword3:     Value 
      #+end_src

  - [ ] *__:* /(__)/

      #+begin_src bash
       sudo dnf install emacs
       sudo apt install emacs
      #+end_src

  - [ ] *__:* /(__)/

      #+BEGIN_SRC emacs-lisp :results output
       ;; Initialize Local Vars from GLOBAL CONSTANTS;
       (let ((h (list 'text-pixels ME--CODE-FRAME-HEIGHT))
             (w (list 'text-pixels ME--CODE-FRAME-WIDTH)))
         (princ "CAR h: ")
         (princ (car h))
         (princ "\n")
         (princ "CDR h: ")
         (princ (cdr h))
         (princ "\n\n")
         (princ "CAR w: ")
         (princ (car w))
         (princ "\n")
         (princ "CDR w: ")
         (princ (cdr w)))
      #+END_SRC

      #+RESULTS:
      : CAR h: text-pixels
      : CDR h: (42)
      : 
      : CAR w: text-pixels
      : CDR w: (92)
      
:END:

New Item Details... Yadda... Yadda... Yadda...

Re-Purpose these as needed and Delete anything you don't need...

Add sub headings as needed...

Don't forget to clock-in to HEADINGS while you work on them...
AND... Don't forget to Clock OUT when you are DONE... %^)

**** NEW New Item 3 /(placeholder)/ [0/3]
:PROPERTIES:
:UNNUMBERED: notoc
:END:
:BOILERPLATE:

  =Delete This BOILERPLATE DRAWER If You Don't Need It...=

  The following list contains Babel Source Code Blocks that are
  often needed for something I am writing or "Logging" about...
  I use them so much I decided to include them in this template...

  - [ ] *__:* /(__)/

      #+begin_src conf
       keyword1:     Value1 
       keyword2:     Value2 
       keyword3:     Value 
      #+end_src

  - [ ] *__:* /(__)/

      #+begin_src bash
       sudo dnf install emacs
       sudo apt install emacs
      #+end_src

  - [ ] *__:* /(__)/

      #+BEGIN_SRC emacs-lisp :results output
       ;; Initialize Local Vars from GLOBAL CONSTANTS;
       (let ((h (list 'text-pixels ME--CODE-FRAME-HEIGHT))
             (w (list 'text-pixels ME--CODE-FRAME-WIDTH)))
         (princ "CAR h: ")
         (princ (car h))
         (princ "\n")
         (princ "CDR h: ")
         (princ (cdr h))
         (princ "\n\n")
         (princ "CAR w: ")
         (princ (car w))
         (princ "\n")
         (princ "CDR w: ")
         (princ (cdr w)))
      #+END_SRC

      #+RESULTS:
      : CAR h: text-pixels
      : CDR h: (42)
      : 
      : CAR w: text-pixels
      : CDR w: (92)
      
:END:

New Item Details... Yadda... Yadda... Yadda...

Re-Purpose these as needed and Delete anything you don't need...

Add sub headings as needed...

Don't forget to clock-in to HEADINGS while you work on them...
AND... Don't forget to Clock OUT when you are DONE... %^)

